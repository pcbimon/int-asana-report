generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model assignees {
  email          String           @id(map: "assignees_pk")
  firstname      String
  lastname       String
  assignee_gid   String?          @unique(map: "assignees_uq_gid")
  subtasks       subtasks[]
  task_followers task_followers[]
}

model sections {
  gid   String  @id(map: "sections_pk")
  name  String
  tasks tasks[]
}

model subtasks {
  gid             String           @id(map: "subtasks_pk")
  name            String?
  parent_task_gid String?
  assignee_gid    String?
  completed       Boolean?
  created_at      DateTime?        @db.Timestamptz(6)
  completed_at    DateTime?        @db.Timestamptz(6)
  due_on          DateTime?        @db.Timestamptz(6)
  assignees       assignees?       @relation(fields: [assignee_gid], references: [assignee_gid], onDelete: NoAction, onUpdate: NoAction, map: "subtasks_assignees_assignee_gid_fk")
  tasks           tasks?           @relation(fields: [parent_task_gid], references: [gid], onDelete: NoAction, onUpdate: NoAction, map: "subtasks_tasks_gid_fk")
  task_followers  task_followers[]
}

model sync_metadata {
  key        String    @id(map: "sync_metadata_pk")
  message    String?
  updated_at DateTime? @db.Timestamptz(6)
}

model task_followers {
  task_gid     String
  follower_gid String
  assignees    assignees @relation(fields: [follower_gid], references: [assignee_gid], onDelete: NoAction, onUpdate: NoAction, map: "task_followers_assignees_assignee_gid_fk")
  subtasks     subtasks  @relation(fields: [task_gid], references: [gid], onDelete: NoAction, onUpdate: NoAction, map: "task_followers_subtasks_gid_fk")

  @@unique([follower_gid, task_gid], map: "task_followers_pk")
}

model tasks {
  gid            String     @id(map: "tasks_pk")
  name           String?
  section_gid    String?
  completed      Boolean?
  completed_at   DateTime?  @db.Timestamptz(6)
  due_on         DateTime?  @db.Timestamptz(6)
  project        String?
  created_at     DateTime?  @db.Timestamptz(6)
  week_startdate DateTime   @db.Timestamptz(6)
  subtasks       subtasks[]
  sections       sections?  @relation(fields: [section_gid], references: [gid], onDelete: NoAction, onUpdate: NoAction, map: "tasks_sections_gid_fk")
}

model mas_user {
  email          String          @id(map: "mas_user_pk")
  firstname      String?
  lastname       String?
  deptid         String?
  nickname       String?
  mas_department mas_department? @relation(fields: [deptid], references: [deptid], onDelete: NoAction, onUpdate: NoAction, map: "mas_user_mas_department_deptid_fk")
}

model mas_department {
  deptid   String     @id(map: "mas_department_pk")
  name     String?
  mas_user mas_user[]
}

view view_user_assignee {
  email        String?
  firstname    String?
  lastname     String?
  deptid       String?
  nickname     String?
  assignee_gid String?
}
